
public class Function {
	
//	메소드	: 특정 기능을 반복적으로 재사용하기 위해 작성되어지는 형식
//	특징		: 코드의 재사용성을 높이고 중복된 코드의 줄이기 위해서 사용 
//	형식		:
//	리턴타입 메소드명(매개변수) {
//		실행문
//		return 값; - 조건이 만족될 때 사용
//	}
	
//	리턴타입	: 기본형, 참조형, void
//	메소드명	: 이름을 작명
//	매개변수	: int x, int y, Car c 필수는 아님 ,
//			   외부에서 전달해주는 값을 받아서 메소드 내부에서 사용하도록 해준다
//  변수는 선언 위치상 멤버변수, 지역변수
//	함수,메소드
//	void add() {
//		System.out.println(3 + 3);
//	}
//	
//	void add2(int x, int y) {
//		System.out.println(x + y);
//	}
//	
//	int add3(int x, int y) {
//		int sum = x + y;
//		return sum;
//	}
//	
//	int sub(int x, int y) {
//		int sub = x - y;
//		return sub;
//	}
//	
//	int mul(int x, int y) {
////		int mul = x * y;
//		return x * y;
//	}
//	
//	double div(double x, double y) {
////		double div = x / y;
//		return x / y;
//	}
//	
//	double re(double x, double y) {
////		double re = x % y;
//		return x % y;
//	}
	
	//return 구문의 특징
	
//	int compare(int x, int y) {
//		
//		if(x > y) {
//			return x;
//		}else {
//			return y;
//		}
//		
//	}
//	
//	void show(int x) {
//		
//		if(x > 10) {
//			System.out.println("메소드 강제 종료");
//			return;		//메소드를 강제종료
//		}
//		
//		System.out.println(x);
//	}
	
	// 매개변수의 특징
	// 기본형 : call by value(값의 복사)
	// 참조형 : call by reference(주소값의 참조)
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
